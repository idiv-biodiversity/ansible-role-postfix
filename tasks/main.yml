---

- name: install postfix
  ansible.builtin.yum:
    name: postfix

- name: get installed version
  ansible.builtin.yum:
    list: postfix
  register: postfix_installed_version_getter

- name: set installed version fact
  ansible.builtin.set_fact:
    postfix_installed_version: >-
      {{ postfix_installed_version_getter.results.0.version }}

- name: remove sendmail
  ansible.builtin.yum:
    name: sendmail
    state: absent

- name: check if inet_interfaces will change
  ansible.builtin.lineinfile:
    path: /etc/postfix/main.cf
    regexp: '^inet_interfaces = '
    line: 'inet_interfaces = {{ postfix_inet_interfaces | join(", ") }}'
  check_mode: yes
  register: postfix_inet_interfaces_precheck

- name: set needs restart fact
  ansible.builtin.set_fact:
    postfix_needs_restart: '{{ postfix_inet_interfaces_precheck.changed }}'

- name: configure main.cf
  ansible.builtin.template:
    src: '{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}-main.cf.j2'
    dest: /etc/postfix/main.cf
    owner: root
    group: root
    mode: 0644
  register: postfix_main_configuration

- name: reload postfix service
  ansible.builtin.service:
    name: postfix
    state: reloaded
  when: >
    postfix_main_configuration.changed and
    not postfix_needs_restart

- name: restart postfix service
  ansible.builtin.service:
    name: postfix
    state: restarted
  when: >
    postfix_main_configuration.changed and
    postfix_needs_restart

- name: configure /etc/aliases
  ansible.builtin.template:
    src: '{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version }}-aliases.j2'
    dest: /etc/aliases
    owner: root
    group: root
    mode: 0644
  register: postfix_aliases_configuration

- name: regenerate /etc/aliases.db
  ansible.builtin.command: newaliases
  when: postfix_aliases_configuration.changed

- name: header_checks
  when: postfix_header_checks is defined
  block:

    - name: configure header_checks files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_header_checks_configuration
      loop: '{{ postfix_header_checks }}'

    - name: regenerate header_checks files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_header_checks_configuration.results }}'

- name: canonical_maps
  when: postfix_canonical is defined
  block:

    - name: configure canonical_maps files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_canonical_configuration
      loop: '{{ postfix_canonical }}'

    - name: regenerate canonical_maps files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_canonical_configuration.results }}'

- name: recipient_canonical_maps
  when: postfix_recipient_canonical is defined
  block:

    - name: configure recipient_canonical_maps files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_recipient_canonical_configuration
      loop: '{{ postfix_recipient_canonical }}'

    - name: regenerate recipient_canonical_maps files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_recipient_canonical_configuration.results }}'

- name: sender_canonical_maps
  when: postfix_sender_canonical is defined
  block:

    - name: configure sender_canonical_maps files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_sender_canonical_configuration
      loop: '{{ postfix_sender_canonical }}'

    - name: regenerate sender_canonical_maps files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_sender_canonical_configuration.results }}'

- name: smtp_generic_maps
  when: postfix_smtp_generic is defined
  block:

    - name: configure smtp_generic_maps files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_smtp_generic_configuration
      loop: '{{ postfix_smtp_generic }}'

    - name: regenerate smtp_generic_maps files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_smtp_generic_configuration.results }}'

- name: transport_maps
  when: postfix_transport is defined
  block:

    - name: configure transport_maps files
      ansible.builtin.copy:
        content: '{{ item.content }}'
        dest: '{{ item.dest }}'
        owner: root
        group: root
        mode: 0644
      when: item.content is defined
      register: postfix_transport_configuration
      loop: '{{ postfix_transport }}'

    - name: regenerate transport_maps files
      ansible.builtin.command: 'postmap {{ item.item.dest }}'
      when: >
        item.changed and
        (item.item.type == "btree" or
        item.item.type == "cdb" or
        item.item.type == "dbm" or
        item.item.type == "hash" or
        item.item.type == "lmdb" or
        item.item.type == "sdbm")
      loop: '{{ postfix_transport_configuration.results }}'

- name: enable postfix service and assure it is started
  ansible.builtin.service:
    name: postfix
    enabled: yes
    state: started
  tags:
    - service

...
